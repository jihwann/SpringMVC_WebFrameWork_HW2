<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- namespace 들어가서 context 체크 해줘야 함. -->
	<context:property-placeholder
		location="/WEB-INF/props/jdbc.properties" />

	<context:annotation-config></context:annotation-config>


	<!-- jdbc.properties가 property로 지정된 곳에 들어가서 이 dataSource가 아래에 dataSource 
		ref로 들어가는 것임. 그러면 최종적으로 OfferDAO의 dataSource에 들어가는 것임. !! JDBC Template에 
		DataSource (Configuration for connection) 가 인자로 들어감!! -->

	<bean id="dataSource"
		class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName"
			value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<context:component-scan
		base-package="kr.ac.hansung.dao"></context:component-scan>


</beans>
